{"ast":null,"code":"import _classCallCheck from \"/Users/devonbrodka/Desktop/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/devonbrodka/Desktop/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/devonbrodka/Desktop/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/devonbrodka/Desktop/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/devonbrodka/Desktop/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/devonbrodka/Desktop/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\nvar app = new Clarifai.App({\n  apiKey: 'd4c93fcf024e44b4a4f33432703a8336'\n});\nvar particlesOptions = {\n  particles: {\n    number: {\n      value: 400,\n      density: {\n        enable: true,\n        value_area: 1500\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.calculateFaceLocation = function (data) {};\n\n    _this.onInputChange = function (event) {\n      //good use for the starwars page\n      _this.setState({\n        input: event.target.value\n      });\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      });\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input).then(function (response) {\n        calculateFaceLocation(response);\n      }, function (err) {// there was an error\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Particles, {\n        className: \"particles\",\n        params: particlesOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Rank, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/devonbrodka/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Component","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","calculateFaceLocation","data","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","err","box"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,WAAP;AAEA,IAAMC,GAAG,GAAG,IAAID,QAAQ,CAACE,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAFH;AADC;AADY,CAAzB;;IAYMR,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAQdS,qBARc,GAQU,UAACC,IAAD,EAAU,CAEjC,CAVa;;AAAA,UAWdC,aAXc,GAWE,UAACC,KAAD,EAAW;AAAE;AAC3B,YAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaV;AAArB,OAAd;AACD,KAba;;AAAA,UAedW,cAfc,GAeG,YAAM;AACrB,YAAKH,QAAL,CAAc;AAACI,QAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWJ;AAAtB,OAAd;;AACEf,MAAAA,GAAG,CAACoB,MAAJ,CACEC,OADF,CAEGtB,QAAQ,CAACuB,iBAFZ,EAGE,MAAKH,KAAL,CAAWJ,KAHb,EAICQ,IAJD,CAKA,UAASC,QAAT,EAAmB;AAClBd,QAAAA,qBAAqB,CAACc,QAAD,CAArB;AACA,OAPD,EAQA,UAASC,GAAT,EAAc,CACZ;AACD,OAVD;AAYH,KA7Ba;;AAEZ,UAAKN,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXQ,MAAAA,GAAG,EAAE;AAHM,KAAb;AAFY;AAOb;;;;6BAuBa;AACP,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACE,QAAA,MAAM,EAAEvB,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIL,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJK,EAKL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALK,EAML,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANK,EAOL,oBAAC,aAAD;AACA,QAAA,aAAa,EAAE,KAAKS,aADpB;AAEA,QAAA,cAAc,EAAE,KAAKK,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPK,EAUL,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVK,CADD;AAcR;;;;EA9CiB1B,S;;AA+ClB,eAAeS,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'd4c93fcf024e44b4a4f33432703a8336'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 400,\n      density: {\n        enable: true,\n        value_area: 1500, \n      }\n    }\n  }\n}\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n  calculateFaceLocation = (data) => {\n\n  }\n  onInputChange = (event) => { //good use for the starwars page\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n      app.models\n       .predict(\n         Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(\n      function(response) {\n       calculateFaceLocation(response);\n      },\n      function(err) {\n        // there was an error\n      }\n    );\n  }\n       render() {\n         return (\n          <div className=\"App\">\n            <Particles className='particles'\n              params={particlesOptions}\n            />\n     <Navigation />\n     <Logo />\n     <Rank />\n     <ImageLinkForm \n     onInputChange={this.onInputChange} \n     onButtonSubmit={this.onButtonSubmit}/> \n     <FaceRecognition imageUrl={this.state.imageUrl} />\n    </div>\n  );\n}}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}